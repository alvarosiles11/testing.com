{"version":3,"sources":["Services/Usuario/Components/usuario/Actions.js","Services/Usuario/Components/usuario/Reducer.ts","Services/Usuario/Components/usuario/Pages/Lista.js","Services/Usuario/Components/usuario/Pages/Registro.js","Services/Usuario/Components/usuario/Pages/RecuperarPass.js","Services/Usuario/Components/usuario/Pages/Login.js","Services/Usuario/Components/usuario/Pages/CodigoRecuperarPass.js","Services/Usuario/Components/usuario/Pages/NuevoPass.js","Services/Usuario/Components/usuario/Pages/Select.js","Services/Usuario/Components/usuario/index.ts","Services/Usuario/Components/datoCabecera/Actions.js","Services/Usuario/Components/datoCabecera/reducer.js","Services/Usuario/Components/datoCabecera/index.ts","Services/Usuario/index.ts","Services/index.ts","Pages/habitacion/Actions.js","Pages/habitacion/Reducer.ts","Components/FloatButtom/index.js","Pages/habitacion/Pages/Lista.js","Pages/habitacion/Pages/Registro.js","Pages/habitacion/index.ts","Components/BotonesPaginas/index.js","Pages/InicioPage/index.js","Pages/index.ts","Assets/index.ts","Reducer/index.js","SConfig/index.ts","App.js","index.js"],"names":["Actions","props","preventRedirect","data","_getReducer","usuarioLog","SNavigation","replace","object","service","Service","ServiceName","component","version","type","estado","SSocket","send","state","Parent","getError","usuarioReducer","error","getAll","reducer","key_usuario","cabecera","getByKey","key","registro","key_rol","editar","eliminar","recuperarPass","verificarCodigoPass","cambiarPassByCodigo","usuario_recuperado","usuarioRecuperado","TypesSwitch","action","getById","login","SStorage","setItem","JSON","stringify","Lista","this","header","label","width","order","center","item","onPress","navigate","name","limit","title","disableScroll","getContent","height","Component","connect","Registro","getParam","usr","ref","form","col","inputProps","customStyle","inputs","Nombres","isRequired","defaultValue","Apellidos","Correo","Telefono","Password","onSubmit","values","SPopup","alert","style","color","submit","RecuperarPass","row","justifyContent","placeholder","Usuario","fontSize","getForm","Login","separation","usuario","keyboardType","autoCapitalize","autoFocus","onKeyPress","evt","focus","password","hidden","fill","STheme","lightBlack","stroke","flex","alignItems","textDecoration","secondary","textDecorationLine","CodigoRecuperarPass","Codigo","NuevoPass","RepPassword","goBack","font","correo","onSelect","Reducers","lastSend","Date","initialState","getItem","resp","parse","Pages","Select","Types","datoCabecera","FloatButtom","esconder","View","TouchableOpacity","position","right","bottom","filter","nombre","icon","acronimo","onSubmitName","lastRegister","BotonesPaginas","getButtom","url","params","paddingTop","padding","colSquare","borderRadius","overflow","textAlign","map","obj","InicioPage","Services","habitacion","Assets","svg","reducers","combineReducers","SocketProps","host","ssl","port","native","web","http","cert","apis","servicio","SThemeProps","default","barStyle","barColor","primary","background","card","dark","setProps","SConfig","store","createStore","undefined","applyMiddleware","reduxThunk","App","debug","socket","assets","theme","initialTheme","themes","prefixes","pages","identificarse","deviceKey","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.63cc0d58.chunk.js","sourcesContent":["import SSocket from 'servisofts-socket';\r\nimport Parent from './index';\r\nimport Service from '../../index';\r\nimport { SNavigation } from 'servisofts-component';\r\n\r\nexport default class Actions {\r\n    static _getReducer = (props) => {\r\n        return props.state[Parent.component + \"Reducer\"];\r\n    }\r\n    static validateSession(props,preventRedirect) {\r\n        var reducer = Actions._getReducer(props);\r\n        var data = reducer.usuarioLog;\r\n        if (!data) {\r\n            if(preventRedirect) return null;\r\n            SNavigation.replace(\"carga\");\r\n            return null;\r\n        }\r\n        return data;\r\n\r\n    }\r\n\r\n    static getError = (type, props) => {\r\n        if (props.state.usuarioReducer.estado == \"error\" && props.state.usuarioReducer.type == type) {\r\n            props.state.usuarioReducer.estado = \"\";\r\n            return props.state.usuarioReducer.error;\r\n        }\r\n        return null\r\n    }\r\n    static login(data) {\r\n        var object = {\r\n            service: Service.ServiceName,\r\n            component: \"usuario\",\r\n            version: \"2.0\",\r\n            type: \"login\",\r\n            estado: \"cargando\",\r\n            data: data,\r\n        }\r\n        // alert(JSON.stringify(object));\r\n        SSocket.send(object);\r\n    }\r\n    static getAll = (props) => {\r\n        var reducer = Actions._getReducer(props);\r\n        var data = reducer.data;\r\n        if (!data) {\r\n            if (reducer.estado == \"cargando\") return null;\r\n            SSocket.send({\r\n                service: Service.ServiceName,\r\n                component: Parent.component,\r\n                version: Parent.version,\r\n                type: \"getAll\",\r\n                estado: \"cargando\",\r\n                key_usuario: \"\",\r\n                cabecera: \"usuario_app\"\r\n            })\r\n            return null;\r\n        }\r\n        return data;\r\n    }\r\n\r\n    static getByKey = (key, props) => {\r\n        var data = Actions.getAll(props);\r\n        if (!data) return null;\r\n        return data[key];\r\n    }\r\n\r\n    static registro = (data, props) => {\r\n        SSocket.send({\r\n            service: Service.ServiceName,\r\n            component: Parent.component,\r\n            version: Parent.version,\r\n            type: \"registro\",\r\n            estado: \"cargando\",\r\n            key_rol: \"1c09542d-4146-4d2e-9f88-48b093c74216\",\r\n            key_usuario: \"\",\r\n            cabecera: \"usuario_app\",\r\n            data: data\r\n        })\r\n    }\r\n    static editar = (data, props) => {\r\n        SSocket.send({\r\n            service: Service.ServiceName,\r\n            component: Parent.component,\r\n            version: Parent.version,\r\n            type: \"editar\",\r\n            estado: \"cargando\",\r\n            key_usuario: \"\",\r\n            cabecera: \"usuario_app\",\r\n            data: data\r\n        })\r\n    }\r\n    static eliminar = (data, props) => {\r\n        SSocket.send({\r\n            service: Service.ServiceName,\r\n            component: Parent.component,\r\n            version: Parent.version,\r\n            type: \"editar\",\r\n            estado: \"cargando\",\r\n            key_usuario: \"\",\r\n            cabecera: \"usuario_app\",\r\n            data: {\r\n                ...data,\r\n                estado: 0,\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    static recuperarPass = (data, props) => {\r\n        SSocket.send({\r\n            service: Service.ServiceName,\r\n            component: Parent.component,\r\n            //version: Parent.version,\r\n            type: \"recuperarPass\",\r\n            estado: \"cargando\",\r\n            data: data[\"Correo\"]\r\n        })\r\n    }\r\n    static verificarCodigoPass = (data, props) => {\r\n        SSocket.send({\r\n            service: Service.ServiceName,\r\n            component: Parent.component,\r\n            //version: Parent.version,\r\n            type: \"verificarCodigoPass\",\r\n            estado: \"cargando\",\r\n            data: data[\"Codigo\"]\r\n        })\r\n    }\r\n\r\n    static cambiarPassByCodigo = (data, props) => {\r\n        SSocket.send({\r\n            service: Service.ServiceName,\r\n            component: Parent.component,\r\n            //version: Parent.version,\r\n            type: \"cambiarPassByCodigo\",\r\n            estado: \"cargando\",\r\n            data: data[\"Password\"],\r\n            usuario_recuperado: props.state.usuarioReducer.usuarioRecuperado\r\n\r\n        })\r\n\r\n    }\r\n}","import { SStorage } from 'servisofts-component'\r\n\r\nimport Parent from './index'\r\n\r\ntype DataProps = {\r\n    component: any,\r\n    type: string,\r\n    version?: any,\r\n    estado?: \"exito\" | \"cargando\" | \"error\",\r\n    error: any,\r\n    [key: string]: any;\r\n}\r\n\r\nconst initialState = () => {\r\n    var initialState:any = {\r\n        component: Parent.component,\r\n        version: Parent.version,\r\n    }\r\n    SStorage.getItem(\"usr_log\", (resp:any) => {\r\n        initialState.usuarioLog = JSON.parse(resp);\r\n    })\r\n    return initialState;\r\n}\r\nexport default (state: any, action: DataProps) => {\r\n    if (!state) return initialState();\r\n    if (action.component != Parent.component) return state;\r\n    // if (action.version != Parent.version) return state;\r\n    TypesSwitch(state, action)\r\n    state.type = action.type;\r\n    state.estado = action.estado;\r\n    state.error = action.error;\r\n    state.lastSend = new Date();\r\n    state = { ...state };\r\n    return state;\r\n}\r\n\r\nconst TypesSwitch = (state: any, action: DataProps) => {\r\n    switch (action.type) {\r\n        case \"getAll\": return getAll(state, action);\r\n        case \"registro\": return registro(state, action);\r\n        case \"editar\": return editar(state, action);\r\n        case \"getById\": return getById(state, action);\r\n        case \"login\": return login(state, action);\r\n        case \"recuperarPass\": return recuperarPass(state, action);\r\n        case \"verificarCodigoPass\": return verificarCodigoPass(state, action);\r\n    }\r\n}\r\n\r\nconst getAll = (state: any, action: DataProps) => {\r\n    if (action.estado != \"exito\") return;\r\n    state.data = action.data;\r\n}\r\nconst registro = (state: any, action: DataProps) => {\r\n    if (action.estado != \"exito\") return;\r\n    if (!state.data) return;\r\n    state.data[action.data.key] = action.data;\r\n}\r\nconst editar = (state: any, action: DataProps) => {\r\n    if (action.estado != \"exito\") return;\r\n    if (!state.data) return;\r\n    state.data[action.data.key] = action.data;\r\n}\r\nconst getById = (state: any, action: DataProps) => {\r\n    if (action.estado != \"exito\") return;\r\n    state.data[action.data.key] = action.data;\r\n}\r\n\r\nconst login = (state: any, action: DataProps) => {\r\n    if (action.estado === \"exito\") {\r\n        state.usuarioLog = action.data;\r\n        SStorage.setItem(\"usr_log\", JSON.stringify(action.data));\r\n        state.login = action.data\r\n    }\r\n}\r\nconst recuperarPass = (state: any, action: DataProps) => {\r\n    if (action.estado != \"exito\") return;\r\n    if (!state.data) return;\r\n    state.data[action.data.key] = action.data;\r\n}\r\n\r\nconst verificarCodigoPass = (state: any, action: DataProps) => {\r\n    // if (action.estado != \"exito\") return;\r\n    // state.usuarioRecuperado = action.data;\r\n    if (action.estado === \"exito\") {\r\n        state.usuarioRecuperado = action.data;\r\n    }\r\n    // SStorage.setItem(\"usr_log\", JSON.stringify(action.data));\r\n    // state.login = action.data\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { SButtom, SIcon, SLoad, SNavigation, SPage, STable2, SText, SView } from 'servisofts-component';\r\nimport Parent from '../index'\r\nclass Lista extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    getContent() {\r\n        var data = Parent.Actions.getAll(this.props);\r\n        if (!data) return <SLoad />;\r\n        return <STable2\r\n            header={[\r\n                { key: \"index\", label: \"#\", width: 50 },\r\n                { key: \"CI\", label: \"CI\", width: 150 },\r\n                { key: \"Nombres\", label: \"Nombres\", width: 150 },\r\n                { key: \"Apellidos\", label: \"Apellidos\", width: 150 },\r\n                { key: \"Correo\", label: \"Correo\", width: 150 , order:\"asc\"},\r\n                { key: \"Telefono\", label: \"Telefono\", width: 150 },\r\n                { key: \"key-editar\", label: \"Editar\", width: 50, center: true, component: (item) => { return <SView onPress={() => { SNavigation.navigate(Parent.component + \"/registro\", { key: item }) }}> <SIcon name={\"Edit\"} width={35} /></SView> } },\r\n                { key: \"key\", label: \"Roles\", width: 50, center: true, component: (item) => { return <SView onPress={() => { SNavigation.navigate(\"\") }}> <SIcon name={\"Ajustes\"} width={35} /></SView> } },\r\n            ]}\r\n            data={data}\r\n            limit={50}\r\n        />\r\n    }\r\n    render() {\r\n        return (\r\n            <SPage title={'Lista de ' + Parent.component} disableScroll center>\r\n                {this.getContent()}\r\n                <SButtom type={\"float\"} onPress={() => {\r\n                    SNavigation.navigate(Parent.component + \"/registro\")\r\n                }}>\r\n                    <SIcon name={\"Add\"} height={50} />\r\n                </SButtom>\r\n\r\n            </SPage>\r\n        );\r\n    }\r\n}\r\nconst initStates = (state) => {\r\n    return { state }\r\n};\r\nexport default connect(initStates)(Lista);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { SButtom, SForm, SHr, SPage, SText, SNavigation, SLoad,SView, SIcon, SPopup } from 'servisofts-component';\r\nimport Parent from '../index'\r\nclass Registro extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n        this.key = SNavigation.getParam(\"key\");\r\n    }\r\n    getContent() {\r\n        this.usr = {};\r\n        if (this.key) {\r\n            this.usr = Parent.Actions.getByKey(this.key, this.props);\r\n            if (!this.usr) return <SLoad />\r\n        }\r\n        return <SForm\r\n            ref={(form) => { this.form = form; }}\r\n            col={\"xs-11 sm-9 md-7 lg-5 xl-4\"}\r\n            inputProps={{\r\n                customStyle: \"calistenia\"\r\n            }}\r\n            inputs={{\r\n                // CI: { label: \"CI\", defaultValue: this.usr.CI, },\r\n                Nombres: { label: \"Nombres\", isRequired: true, defaultValue: this.usr.Nombres, },\r\n                Apellidos: { label: \"Apellidos\",isRequired: true, defaultValue: this.usr.Apellidos,  },\r\n                Correo: { label: \"Correo\",isRequired: true, defaultValue: this.usr.Correo,  },\r\n                // \"Fecha de nacimiento\": { label: \"Fecha de nacimiento\", type: \"date\", isRequired: true, defaultValue: this.usr[\"Fecha de nacimiento\"]  },\r\n                Telefono: { label: \"Telefono\", defaultValue: this.usr.Telefono?this.usr.Telefono:\" \", type:\"phone\", },\r\n                Password: { label: \"Password\",isRequired: true, type: \"password\",defaultValue: this.usr.Password,  },\r\n                // RepPassword: { label: \"Repetir password\", type: \"password\", isRequired: true, defaultValue: this.usr.Password  },\r\n\r\n            }}\r\n            onSubmit={(values) => {\r\n                if (this.key) {\r\n                    Parent.Actions.editar({\r\n                        ...this.usr,\r\n                        ...values\r\n                    }, this.props);\r\n                } else {\r\n                    Parent.Actions.registro(values, this.props);\r\n                }\r\n            }}\r\n        />\r\n    }\r\n    render() {\r\n        var reducer = this.props.state.usuarioReducer;\r\n        if(reducer.type ==\"registro\" && reducer.estado==\"exito\"){\r\n            // SNavigation.goBack();\r\n            SPopup.alert(\"exito\");\r\n        }\r\n        if(reducer.type ==\"editar\" && reducer.estado==\"exito\"){\r\n            // SNavigation.goBack();\r\n            SPopup.alert(\"exito\");\r\n        }\r\n        if(reducer.type ==\"registro\" && reducer.estado==\"error\"){\r\n            reducer.estado = \"\";\r\n            SPopup.alert(JSON.stringify(reducer.error));\r\n            // SPopup.alert(\"El usuario ya existe\");\r\n        }\r\n\r\n        return (\r\n            <SPage title={'Registro de '+Parent.component} center>\r\n                <SView height={30}></SView>\r\n                {this.getContent()}\r\n                <SHr height={25}/>\r\n                <SButtom \r\n                style={{color: '#fff'}}\r\n                    props={{\r\n                        type: \"outline\"\r\n                    }}\r\n                    onPress={() => { this.form.submit() }}\r\n                >{(this.key ? \"Editar\" : \"Registrar\")}</SButtom>\r\n            </SPage>\r\n        );\r\n    }\r\n}\r\nconst initStates = (state) => {\r\n    return { state }\r\n};\r\nexport default connect(initStates)(Registro);","import React, { Component } from 'react';\r\nimport { View, Text } from 'react-native';\r\nimport { connect } from 'react-redux';\r\nimport { SLoad } from 'servisofts-component';\r\nimport { SButtom, SDate, SForm, SNavigation, SPage, SPopup, SText, STheme, SView, SIcon } from 'servisofts-component';\r\nimport Usuario from '..';\r\n// import BackgroundImage from '../../../Components/BackgroundImage';\r\n// import FotoPerfilComponent from '../../../Components/FotoPerfilComponent';\r\n// import LogoAnimado from '../../CargaPage/LogoAnimado';\r\n// import RolDeUsuario from './RolDeUsuario';\r\n\r\nclass RecuperarPass extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n        this.key = SNavigation.getParam(\"key\");\r\n    }\r\n    getForm() {\r\n        return <SForm\r\n            ref={(ref) => { this.form = ref; }}\r\n            row\r\n            style={{\r\n                justifyContent: \"space-between\",\r\n            }}\r\n            inputProps={{\r\n                col: \"xs-12\",\r\n                customStyle: \"calistenia\",\r\n            }}\r\n            inputs={{\r\n                Correo: { placeholder: \"Ingrese su correo electrónico\", type: \"email\", isRequired: true, },\r\n            }}\r\n            onSubmit={(values) => {\r\n                Usuario.Actions.recuperarPass(values, this.props);\r\n            }}\r\n        />\r\n    }\r\n\r\n    render() {\r\n        var error = Usuario.Actions.getError(\"recuperarPass\", this.props);\r\n        if (error) {\r\n            SPopup.alert(\"Usuario no encontrado, Verifique sus datos.\");\r\n        }\r\n        if (this.props.state.usuarioReducer.estado == \"exito\" && this.props.state.usuarioReducer.type == \"recuperarPass\") {\r\n            this.props.state.usuarioReducer.estado = \"\";\r\n            SNavigation.navigate(Usuario.component + \"/codigoRecuperarContrasena\");\r\n        }\r\n        return (\r\n            <SPage title={\"Recuperar Contraseña\"}>\r\n                <SView center>\r\n                    <SView col={\"xs-11 md-6 xl-4\"} center>\r\n                        <SView height={40} />\r\n                        <SText fontSize={16} center>Le enviaremos un mensaje para configurar o restablecer su nueva contraseña. </SText>\r\n                        <SView height={40} />\r\n                        {/* {this.key ? <SView col={\"xs-6\"} height={150}> <FotoPerfilComponent data={this.usr} component={\"usuario\"} /> </SView> : null} */}\r\n                        {this.getForm()}\r\n                        \r\n                        <SView height={16} />\r\n                        <SView col={\"xs-11\"} row center>\r\n                            <SButtom type={\"outline\"} center props={{\r\n                                // type: STheme.color.primary\r\n                            }}\r\n                                onPress={() => {\r\n                                    this.form.submit();\r\n                                }}\r\n                            >ENVIAR</SButtom>\r\n                        </SView>\r\n                        <SView height={36} />\r\n                    </SView>\r\n                    {/* <RolDeUsuario data={this.usr} /> */}\r\n                </SView>\r\n            </SPage>\r\n        );\r\n    }\r\n}\r\nconst initStates = (state) => {\r\n    return { state }\r\n};\r\nexport default connect(initStates)(RecuperarPass);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { SButtom, SForm, SHr, SIcon, SNavigation, SPage, SPopup, SText, STheme, SView } from 'servisofts-component';\r\nimport Parent from '../index'\r\nimport Usuario from '..';\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    getForm() {\r\n        return <SForm\r\n            ref={(ref) => { this.form = ref; }}\r\n            props={{\r\n                col: \"xs-12\",\r\n            }}\r\n            inputProps={{\r\n                customStyle: \"calistenia\",\r\n                separation: 16,\r\n            }}\r\n            inputs={{\r\n                usuario: {\r\n                    placeholder: \"E-mail\",\r\n                    isRequired: true, keyboardType: \"email-address\", autoCapitalize: \"none\", type: \"email\", autoFocus: true, onKeyPress: (evt) => {\r\n                        if (evt.key === \"Enter\") {\r\n                            this.form.focus(\"password\");\r\n                        }\r\n                    },\r\n\r\n                },\r\n                password: {\r\n                    placeholder: \"Contraseña\",\r\n                    type: \"password\", isRequired: true, onKeyPress: (evt) => {\r\n                        if (evt.key === \"Enter\") {\r\n                            this.form.submit();\r\n                        }\r\n                    },\r\n                },\r\n            }}\r\n            onSubmit={(data) => {\r\n                if (data) {\r\n                    // Parent.Actions.getAll(data, this.props);\r\n                    Parent.Actions.login(data, this.props);\r\n                }\r\n            }}\r\n        />\r\n    }\r\n\r\n    render() {\r\n        var reducer = this.props.state[Parent.component + \"Reducer\"];\r\n        if (reducer.usuarioLog) {\r\n            SNavigation.replace(\"carga\");\r\n        }\r\n        if (reducer.type == \"login\" && reducer.estado == \"error\") {\r\n            reducer.estado = \"\";\r\n            SPopup.alert(\"Error\");\r\n        }\r\n        return (\r\n            <SPage title={'Login ' + Parent.component} center hidden>\r\n                <SView center col={\"xs-12\"}>\r\n                    <SView col={\"xs-11 md-6 xl-4\"} center  >\r\n                        <SHr height={32} />\r\n                        <SView col={\"xs-11\"} height={140}>\r\n                            <SIcon name={\"Logo\"} fill={STheme.color.lightBlack} stroke={STheme.color.lightBlack} />\r\n                        </SView>\r\n                        <SView height={32} />\r\n                        {this.getForm()}\r\n                        <SView height={16} />\r\n\r\n                        <SView col={\"xs-12\"} flex height style={{ alignItems: \"flex-end\" }}>\r\n                            <SText style={{\r\n                                textDecoration:\"underline\",\r\n                            }} fontSize={14} color={STheme.color.secondary} onPress={() => { SNavigation.navigate(Parent.component + '/recuperarContrasena'); }}>¿Olvidaste tu email o contraseña?</SText>\r\n                        </SView>\r\n\r\n                        <SView height={30} />\r\n                        <SView col={\"xs-11\"} row center>\r\n                            <SButtom\r\n                                type={\"outline\"}\r\n                                onPress={() => {\r\n                                    this.form.submit();\r\n                                }}>INICIAR</SButtom>\r\n                            {/* <SButtom style={{ backgroundColor: STheme.color.primary, width: '100%', fontSize: 14, borderRadius: 8, }} onPress={() => {\r\n                                this.form.submit();\r\n                            }} ></SButtom> */}\r\n                        </SView>\r\n\r\n                        <SView col={\"xs-11\"} height={50} row center  >\r\n                            <SView flex center height={20} row>\r\n                                <SText fontSize={14} color={STheme.color.lightBlack}  >¿No tienes una cuenta?  </SText>\r\n                                <SText fontSize={14} style={{\r\n                                    textDecorationLine: \"underline\",\r\n                                }} color={STheme.color.secondary} onPress={() => { SNavigation.navigate(Parent.component + '/registro'); }}>REGISTRATE</SText>\r\n                            </SView>\r\n                        </SView>\r\n                        <SView height={30} />\r\n                    </SView>\r\n                </SView>\r\n            </SPage>\r\n        );\r\n    }\r\n}\r\nconst initStates = (state) => {\r\n    return { state }\r\n};\r\nexport default connect(initStates)(Login);","import React, { Component } from 'react';\r\nimport { View, Text } from 'react-native';\r\nimport { connect } from 'react-redux';\r\nimport { SLoad } from 'servisofts-component';\r\nimport { SButtom, SDate, SForm, SNavigation, SPage, SPopup, SText, STheme, SView, SIcon } from 'servisofts-component';\r\nimport Usuario from '..';\r\n// import BackgroundImage from '../../../Components/BackgroundImage';\r\n// import FotoPerfilComponent from '../../../Components/FotoPerfilComponent';\r\n// import LogoAnimado from '../../CargaPage/LogoAnimado';\r\n// import RolDeUsuario from './RolDeUsuario';\r\n\r\nclass CodigoRecuperarPass extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n    getForm() {\r\n        return <SForm\r\n            ref={(ref) => { this.form = ref; }}\r\n            row\r\n            style={{\r\n                justifyContent: \"space-between\",\r\n            }}\r\n            inputProps={{\r\n                col: \"xs-12\",\r\n                customStyle: \"calistenia\",\r\n            }}\r\n            inputs={{\r\n                Codigo: { label: \"Ingrese el código recibido\", type: \"text\", isRequired: true},\r\n            }}\r\n            onSubmit={(values) => {\r\n                // if (this.key) {\r\n                //     Usuario.Actions.recuperarPass({\r\n                //         ...this.usr,\r\n                //         ...values\r\n                //     }, this.props);\r\n                // } else {\r\n                Usuario.Actions.verificarCodigoPass(values, this.key_rol, this.props);\r\n                // }\r\n            }}\r\n        />\r\n    }\r\n\r\n    render() {\r\n        var error = Usuario.Actions.getError(\"verificarCodigoPass\", this.props);\r\n        if (error) {\r\n            SPopup.alert(\"¡Código incorrecto!\");\r\n        }\r\n        if (this.props.state.usuarioReducer.estado == \"exito\" && this.props.state.usuarioReducer.type == \"verificarCodigoPass\") {\r\n            this.props.state.usuarioReducer.estado = \"\";\r\n            SNavigation.navigate(Usuario.component + \"/nuevaContrasena\");\r\n            //alert(\"¡Código correcto!\");\r\n        }\r\n        return (\r\n            <SPage title={\"Código de Recuperación\"}>\r\n                <SView center>\r\n                    <SView col={\"xs-11 md-6 xl-4\"} center>\r\n                        <SView height={40} />\r\n                        <SText fontSize={24} center>¡Mensaje Enviado!</SText>\r\n                        <SView height={10} />\r\n                        <SText fontSize={16} center>Revise su bandeja de entrada e introduzca el código recibido. </SText>\r\n                        <SView height={40} />\r\n                        {/* {this.key ? <SView col={\"xs-6\"} height={150}> <FotoPerfilComponent data={this.usr} component={\"usuario\"} /> </SView> : null} */}\r\n                        {this.getForm()}\r\n                        <SView height={16} />\r\n                        <SView col={\"xs-11\"} row center>\r\n                            <SButtom type={\"outline\"}\r\n                                onPress={() => {\r\n                                    this.form.submit();\r\n                                }}\r\n                            >VERIFICAR</SButtom>\r\n                        </SView>\r\n                        <SView height={36} />\r\n                    </SView>\r\n                    {/* <RolDeUsuario data={this.usr} /> */}\r\n                </SView>\r\n            </SPage>\r\n        );\r\n    }\r\n}\r\nconst initStates = (state) => {\r\n    return { state }\r\n};\r\nexport default connect(initStates)(CodigoRecuperarPass);","import React, { Component } from 'react';\r\nimport { View, Text } from 'react-native';\r\nimport { connect } from 'react-redux';\r\nimport { SLoad } from 'servisofts-component';\r\nimport { SButtom, SDate, SForm, SNavigation, SPage, SPopup, SText, STheme, SView, SIcon } from 'servisofts-component';\r\nimport Usuario from '..';\r\n// import BackgroundImage from '../../../Components/BackgroundImage';\r\n// import FotoPerfilComponent from '../../../Components/FotoPerfilComponent';\r\n// import LogoAnimado from '../../CargaPage/LogoAnimado';\r\n// import RolDeUsuario from './RolDeUsuario';\r\n\r\nclass NuevoPass extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    getForm() {\r\n\r\n        return <SForm\r\n            ref={(ref) => { this.form = ref; }}\r\n            row\r\n            style={{\r\n                justifyContent: \"space-between\",\r\n            }}\r\n            inputProps={{\r\n                col: \"xs-12\",\r\n                customStyle: \"calistenia\",\r\n            }}\r\n            inputs={{\r\n                Password: { label: \"Introduce tu nueva contraseña\", isRequired: true, type: \"password\", },\r\n                RepPassword: { label: \"Confirma tu nueva contraseña\", type: \"password\", isRequired: true, },\r\n            }}\r\n            onSubmit={(values) => {\r\n                // if (this.key) {\r\n                //     Usuario.Actions.recuperarPass({\r\n                //         ...this.usr,\r\n                //         ...values\r\n                //     }, this.props);\r\n                // } else {\r\n                Usuario.Actions.cambiarPassByCodigo(values, this.props);\r\n                // }\r\n            }}\r\n        />\r\n    }\r\n\r\n    render() {\r\n        //var bb = this.props.state.usuarioReducer.usuarioRecuperado;\r\n        // var error = Usuario.Actions.getError(\"verificarCodigoPass\", this.props);\r\n        // if (error) {\r\n        //     SPopup.alert(\"¡Código incorrecto!\");\r\n        // }\r\n        if (!this.props.state.usuarioReducer.usuarioRecuperado) {\r\n            SNavigation.goBack();\r\n        }\r\n        if (this.props.state.usuarioReducer.estado == \"exito\" && this.props.state.usuarioReducer.type == \"cambiarPassByCodigo\") {\r\n            this.props.state.usuarioReducer.estado = \"\";\r\n            // var dataRecuperar = Usuar\r\n            SNavigation.navigate(\"login\");\r\n\r\n        }\r\n        return (\r\n            <SPage title={\"Registrar nueva contraseña\"}>\r\n                <SView center>\r\n                    <SView col={\"xs-11 md-6 xl-4\"} center>\r\n                        <SView height={40} />\r\n                        <SText fontSize={24}  font=\"LondonTwo\" center>¡Restablece tu contraseña!</SText>\r\n                        <SView height={30} />\r\n                        <SText fontSize={18}>{this.props.state.usuarioReducer.usuarioRecuperado.correo}</SText>\r\n                        <SView height={30} />\r\n\r\n                        {/* {this.key ? <SView col={\"xs-6\"} height={150}> <FotoPerfilComponent data={this.usr} component={\"usuario\"} /> </SView> : null} */}\r\n                        {this.getForm()}\r\n                        <SView height={30} />\r\n                        <SView col={\"xs-11\"} row center>\r\n                            <SButtom type={\"outline\"} props={{\r\n                                // type: STheme.color.primary\r\n                            }}\r\n                                onPress={() => {\r\n                                    this.form.submit();\r\n                                }}\r\n                            >RESTABLECER</SButtom>\r\n                        </SView>\r\n                        <SView height={36} />\r\n                    </SView>\r\n                    {/* <RolDeUsuario data={this.usr} /> */}\r\n                </SView>\r\n            </SPage>\r\n        );\r\n    }\r\n}\r\nconst initStates = (state) => {\r\n    return { state }\r\n};\r\nexport default connect(initStates)(NuevoPass);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { SButtom, SIcon, SLoad, SNavigation, SPage, STable2, SText, SView } from 'servisofts-component';\r\nimport Parent from '../index'\r\nclass Lista extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    getContent() {\r\n        var data = Parent.Actions.getAll(this.props);\r\n        if (!data) return <SLoad />;\r\n        return <STable2\r\n            header={[\r\n                { key: \"index\", label: \"#\", width: 50 },\r\n                { key: \"CI\", label: \"CI\", width: 150 },\r\n                { key: \"Nombres\", label: \"Nombres\", width: 150 },\r\n                { key: \"Apellidos\", label: \"Apellidos\", width: 150 },\r\n                { key: \"Correo\", label: \"Correo\", width: 150, order: \"asc\" },\r\n                { key: \"Telefono\", label: \"Telefono\", width: 150 },\r\n                {\r\n                    key: \"key-select\", label: \"Seleccionar\", width: 50, center: true, component: (item) => {\r\n                        return <SView onPress={() => {\r\n                            var onSelect = SNavigation.getParam(\"onSelect\");\r\n                            if (onSelect) onSelect(item);\r\n                            SNavigation.goBack();\r\n                        }}> <SIcon name={\"Add\"} width={35} /></SView>\r\n                    }\r\n                },\r\n\r\n            ]}\r\n            data={data}\r\n            limit={20}\r\n        />\r\n    }\r\n    render() {\r\n        return (\r\n            <SPage title={'Selecciona el ' + Parent.component} disableScroll center>\r\n                {this.getContent()}\r\n                <SButtom type={\"float\"} onPress={() => {\r\n                    SNavigation.navigate(Parent.component + \"/registro\")\r\n                }}>\r\n                    <SIcon name={\"Add\"} height={50} />\r\n                </SButtom>\r\n\r\n            </SPage>\r\n        );\r\n    }\r\n}\r\nconst initStates = (state) => {\r\n    return { state }\r\n};\r\nexport default connect(initStates)(Lista);","//  COMPONENT CONFIG\r\nconst component = \"usuario\"; // COMPONENT NAME \r\nconst version = \"2.0\";\r\n// ---------------------------------------\r\nimport Actions from \"./Actions\";\r\nimport Reducer from \"./Reducer\";\r\n\r\nimport Lista from \"./Pages/Lista\";\r\nimport Registro from \"./Pages/Registro\";\r\nimport RecuperarPass from \"./Pages/RecuperarPass\";\r\nimport TipoUsuario from \"./Pages/TipoUsuario\";\r\nimport Login from \"./Pages/Login\";\r\nimport CodigoRecuperarPass from \"./Pages/CodigoRecuperarPass\";\r\nimport NuevoPass from \"./Pages/NuevoPass\";\r\nimport Select from \"./Pages/Select\";\r\nexport default {\r\n    component,\r\n    version,\r\n    Actions,\r\n    Reducers: {\r\n        [component + 'Reducer']: Reducer\r\n    },\r\n    Pages: {\r\n        [component]: Lista,\r\n        [component + \"/registro\"]: Registro,\r\n        [component + \"/recuperarContrasena\"]: RecuperarPass,\r\n        [component + \"/codigoRecuperarContrasena\"]: CodigoRecuperarPass,\r\n        [component + \"/nuevaContrasena\"]: NuevoPass,\r\n        [component + \"/select\"]: Select,\r\n        \"login\":Login\r\n    }\r\n}","import SSocket from 'servisofts-socket';\r\n// import Parent from './index';\r\n\r\n// const Petition = {\r\n//     component: Parent.component,\r\n//     version: Parent.version,\r\n// }\r\nexport default class Actions {\r\n    \r\n    static getAll = () => {\r\n\r\n        \r\n    }\r\n\r\n}","import Parent from './index'\r\n\r\nconst initialState = () => {\r\n    return {\r\n        component: Parent.component,\r\n        version: Parent.version,\r\n    };\r\n}\r\nexport default (state, action) => {\r\n    if (!state) return initialState();\r\n    if (action.component != Parent.component) return state;\r\n    if (action.version != Parent.version) return state;\r\n    Types(state, action)\r\n    state.type = action.type;\r\n    state.estado = action.estado;\r\n    state.error = action.error;\r\n    state.lastSend = new Date();\r\n    state = { ...state };\r\n    return state;\r\n}\r\n\r\nconst Types = () => {\r\n    switch (action.type) {\r\n\r\n    }\r\n}","//  COMPONENT CONFIG\r\n\r\nexport const component = \"datoCabecera\"; // COMPONENT NAME \r\nexport const version = \"1.0\";\r\n// ---------------------------------------\r\nimport Actions from \"./Actions\";\r\nimport reducer from \"./reducer\";\r\nexport default {\r\n    component:component,\r\n    version:version,\r\n    Actions,\r\n    Reducers: {\r\n        [component + 'Reducer']: reducer\r\n    },\r\n}","import { SPageListProps } from 'servisofts-component'\r\n\r\nconst ServiceName = \"usuario\";\r\n\r\nimport usuario from './Components/usuario';\r\nimport datoCabecera from './Components/datoCabecera';\r\n\r\n\r\nconst Pages: SPageListProps = {\r\n    ...usuario.Pages\r\n}\r\n\r\nconst Reducers = {\r\n    // \"login\": Login,\r\n    ...usuario.Reducers,\r\n    ...datoCabecera.Reducers,\r\n\r\n}\r\n\r\nexport default {\r\n    ServiceName,\r\n    Pages,\r\n    Reducers,\r\n};","\r\nimport Usuario from './Usuario';\r\nconst Pages = {\r\n    ...Usuario.Pages,\r\n}\r\n\r\nconst Reducers = {\r\n    ...Usuario.Reducers,\r\n}\r\n\r\nexport default {\r\n    Pages,\r\n    Reducers\r\n}","import SSocket from \"servisofts-socket\";\r\nimport Parent from \"./index\";\r\n\r\nexport default class Actions {\r\n  static getAll = props => {\r\n    var reducer = props.state[Parent.component + \"Reducer\"];\r\n    var data = reducer.data;\r\n    if (!data) {\r\n      if (reducer.estado == \"cargando\") return null;\r\n      SSocket.send({\r\n        component: Parent.component,\r\n        version: Parent.version,\r\n        // key_usuario: \"admin\",\r\n        component: \"habitacion\",\r\n        type: \"getAll\",\r\n        estado: \"cargando\"\r\n      });\r\n      return null;\r\n    }\r\n    return data;\r\n  };\r\n\r\n  static getByKey = (key, props) => {\r\n    var data = this.getAll(props);\r\n    if (!data) return null;\r\n    return data[key];\r\n  };\r\n\r\n  static registro = (data, props) => {\r\n    SSocket.send({\r\n      component: Parent.component,\r\n      version: Parent.version,\r\n      type: \"registro\",\r\n      estado: \"cargando\",\r\n      key_usuario: \"\",\r\n      data: data\r\n    });\r\n  };\r\n\r\n  static editar = (data, props) => {\r\n    SSocket.send({\r\n      component: Parent.component,\r\n      version: Parent.version,\r\n      type: \"editar\",\r\n      estado: \"cargando\",\r\n      key_usuario: \"admin\",\r\n      data: data\r\n    });\r\n  };\r\n\r\n  static eliminar(data, props) {\r\n    var reducer = props.state[Parent.component + \"Reducer\"];\r\n    var object = {\r\n      component: Parent.component,\r\n      version: Parent.version,\r\n      type: \"editar\",\r\n      estado: \"cargando\",\r\n      key_usuario: \"admin\",\r\n      data: { ...data, estado: 0 }\r\n    };\r\n    SSocket.send(object);\r\n  }\r\n}\r\n","import Parent from './index'\r\n\r\ntype DataProps = {\r\n    component: any,\r\n    type: string,\r\n    version?: any,\r\n    estado?: \"exito\" | \"cargando\" | \"error\",\r\n    error: any,\r\n    [key: string]: any;\r\n}\r\n\r\nconst initialState = () => {\r\n    return {\r\n        component: Parent.component,\r\n        version: Parent.version,\r\n    };\r\n}\r\nexport default (state: any, action: DataProps) => {\r\n    if (!state) return initialState();\r\n    if (action.component != Parent.component) return state;\r\n    // if (action.version != Parent.version) return state;\r\n    TypesSwitch(state, action)\r\n    state.type = action.type;\r\n    state.estado = action.estado;\r\n    state.error = action.error;\r\n    state.lastSend = new Date();\r\n    state = { ...state };\r\n    return state;\r\n}\r\n\r\nconst TypesSwitch = (state: any, action: DataProps) => {\r\n    switch (action.type) {\r\n        case \"getAll\": return getAll(state, action);\r\n        case \"registro\": return registro(state, action);\r\n        case \"editar\": return editar(state, action);\r\n        case \"getById\": return getById(state, action);\r\n    }\r\n}\r\n\r\nconst getAll = (state: any, action: DataProps) => {\r\n    if (action.estado != \"exito\") return;\r\n    state.data = action.data;\r\n}\r\nconst registro = (state: any, action: DataProps) => {\r\n    if (action.estado != \"exito\") return;\r\n    if (!state.data) return;\r\n    state.data[action.data.key] = action.data;\r\n}\r\nconst editar = (state: any, action: DataProps) => {\r\n    if (action.estado != \"exito\") return;\r\n    if (!state.data) return;\r\n    state.data[action.data.key] = action.data;\r\n}\r\nconst getById = (state: any, action: DataProps) => {\r\n    if (action.estado != \"exito\") return;\r\n    state.data[action.data.key] = action.data;\r\n}","import React, { Component } from 'react';\r\nimport { TouchableOpacity, View, Text } from \"react-native\";\r\nimport { SIcon } from 'servisofts-component';\r\nconst FloatButtom = (props) => {\r\n    if (props.esconder) {\r\n        return <View />\r\n    }\r\n    return (\r\n        <TouchableOpacity onPress={() => {\r\n            props.onPress();\r\n        }}\r\n            style={{\r\n                position: \"absolute\",\r\n                right: 10,\r\n                bottom: 40,\r\n                width: 50,\r\n                height: 50,\r\n                // borderWidth: STheme.color.secondary + \"22\",\r\n                // borderColor: STheme.color.secondary + \"22\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                // margin: 4,\r\n                ...props.style\r\n            }}>\r\n            <SIcon name={\"Add\"} />\r\n            {/* <Svg name={\"Add\"} style={{\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n                // fill:\"#C31\"\r\n            }} /> */}\r\n        </TouchableOpacity >\r\n    )\r\n}\r\nexport default FloatButtom;","import { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { SLoad, SNavigation, SPage, STable2 } from \"servisofts-component\";\r\nimport FloatButtom from \"../../../Components/FloatButtom\";\r\nimport Parent from \"../index\";\r\n\r\nclass Lista extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n    // this.key_servicio = SNavigation.getParam('key_servicio');\r\n  }\r\n\r\n  getContent() {\r\n    var data = Parent.Actions.getAll(this.props);\r\n    if (!data) return <SLoad />;\r\n    return (\r\n      <STable2\r\n        header={[\r\n          { key: \"index\", label: \"#\", width: 50 },\r\n          { key: \"empresa\", label: \"nombre\", width: 150 },\r\n          { key: \"nombre_habitacion\", label: \"nombre\", width: 150 },\r\n          { key: \"estado_habitacion\", label: \"nombre\", width: 150 }\r\n        ]}\r\n        filter={data => {\r\n          if (data.estado != 1) return false;\r\n          return true;\r\n        }}\r\n        data={data}\r\n      />\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <SPage title={\"Lista de \" + Parent.component} disableScroll center>\r\n        {this.getContent()}\r\n        <FloatButtom\r\n          onPress={() => {\r\n            SNavigation.navigate(Parent.component + \"/registro\");\r\n          }}\r\n        />\r\n      </SPage>\r\n    );\r\n  }\r\n}\r\nconst initStates = state => {\r\n  return { state };\r\n};\r\nexport default connect(initStates)(Lista);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { SButtom, SForm, SHr, SPage, SText, SNavigation, SLoad, SView, SIcon } from 'servisofts-component';\r\nimport Parent from '../index'\r\nimport SSocket from 'servisofts-socket';\r\n\r\nclass Registro extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n        this.key = SNavigation.getParam(\"key\");\r\n        // this.key_servicio = SNavigation.getParam('key_servicio');\r\n\r\n    }\r\n    getContent() {\r\n        if (this.key) {\r\n            this.data = Parent.Actions.getByKey(this.key, this.props);\r\n            if (!this.data) return <SLoad />\r\n        } else {\r\n            this.data = {};\r\n        }\r\n\r\n        return <SForm\r\n            ref={(form) => { this.form = form; }}\r\n            col={\"xs-11 sm-9 md-7 lg-5 xl-4\"}\r\n            inputProps={{\r\n                customStyle: \"calistenia\"\r\n            }}\r\n            inputs={{\r\n                nombre: { label: \"nombre\", isRequired: true, defaultValue: this.data[\"nombre\"], icon: <SIcon name={\"InputUser\"} width={40} height={30} /> },\r\n                acronimo: { label: \"acronimo\", isRequired: true, defaultValue: this.data[\"acronimo\"], icon: <SIcon name={\"InputUser\"} width={40} height={30} /> }\r\n            }}\r\n            onSubmitName={\"Aceptar\"}\r\n            onSubmit={(values) => {\r\n                if (this.key) {\r\n                    Parent.Actions.editar({\r\n                        ...this.data,\r\n                        ...values\r\n                    }, this.props);\r\n\r\n                } else {\r\n                    Parent.Actions.registro(values, this.props);\r\n\r\n                }\r\n            }}\r\n        />\r\n    }\r\n    render() {\r\n        var reducer = this.props.state[Parent.component + \"Reducer\"];\r\n        if (reducer.type == \"registro\" || reducer.type == \"editar\") {\r\n            if (reducer.estado == \"exito\") {\r\n\r\n                if (!this.key) {\r\n                    this.key = reducer.lastRegister.key;\r\n                }\r\n                reducer.estado = \"\";\r\n\r\n                SNavigation.goBack();\r\n            }\r\n        }\r\n        return (\r\n            <SPage title={'Registro de ' + Parent.component} center>\r\n                <SView height={30}></SView>\r\n                {this.getContent()}\r\n                <SHr />\r\n\r\n            </SPage>\r\n        );\r\n    }\r\n}\r\nconst initStates = (state) => {\r\n    return { state }\r\n};\r\nexport default connect(initStates)(Registro);","//  COMPONENT CONFIG\r\nconst component = \"habitacion\"; // COMPONENT NAME\r\nconst version = \"1.0\";\r\n// ---------------------------------------\r\nimport Actions from \"./Actions\";\r\nimport Reducer from \"./Reducer\";\r\n\r\nimport Lista from \"./Pages/Lista\";\r\nimport Registro from \"./Pages/Registro\";\r\n\r\nexport default {\r\n  component,\r\n  version,\r\n  Actions,\r\n  Reducers: {\r\n    [component + \"Reducer\"]: Reducer\r\n  },\r\n  Pages: {\r\n    [component]: Lista,\r\n    [component + \"/registro\"]: Registro\r\n  }\r\n};\r\n","import React, { Component } from 'react';\r\nimport { SImage, SText, STheme, SView, SIcon, SNavigation } from 'servisofts-component';\r\n\r\ntype BotonesType = {\r\n    history: 'this.props.history',\r\n    data: [{ url: String, params: object, label: \"Title\", icon: SIcon, onPress?: Function }]\r\n}\r\nexport default class BotonesPaginas extends Component<BotonesType> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    getButtom = ({ url, label, icon, params, onPress }) => {\r\n        if (typeof icon == \"string\") {\r\n            icon = <SIcon name={icon} />\r\n        }\r\n        return <SView center\r\n            col={\"xs-3 sm-2.5 md-2\"}\r\n            style={{\r\n                paddingTop: 16,\r\n                padding: 8,\r\n            }} >\r\n            <SView\r\n                center\r\n                col={\"xs-12\"}\r\n                colSquare\r\n                onPress={() => {\r\n                    if (onPress) {\r\n                        onPress();\r\n                        return;\r\n                    }\r\n                    SNavigation.navigate(url, params)\r\n                }}>\r\n                <SView\r\n                    col={\"xs-10\"} colSquare center\r\n                    style={{\r\n                        borderRadius: 8,\r\n                        overflow: 'hidden',\r\n                    }}>\r\n                    {icon}\r\n                </SView>\r\n                <SText style={{\r\n                    color: STheme.color.secondary,\r\n                    textAlign: \"center\",\r\n                    height: 24,\r\n                    fontSize: 12,\r\n                }}>{label}</SText>\r\n            </SView>\r\n        </SView>\r\n    }\r\n    render() {\r\n        return (\r\n            <SView\r\n                col={\"xs-12 md-10 xl-8\"}\r\n                center row\r\n            >\r\n                {this.props.data.map((obj) => {\r\n                    return this.getButtom(obj)\r\n                })}\r\n\r\n            </SView>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { SPage, SText } from 'servisofts-component';\r\nimport BotonesPaginas from '../../Components/BotonesPaginas';\r\n\r\nclass InicioPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <SPage title={'InicioPage'}>\r\n                <BotonesPaginas data={[\r\n                    { label: \"Pais\", url: \"pais\", icon: \"Ajustes\" },\r\n                ]} />\r\n\r\n\r\n            </SPage>\r\n        );\r\n    }\r\n}\r\nconst initStates = (state) => {\r\n    return { state }\r\n};\r\nexport default connect(initStates)(InicioPage);","import { SPageListProps } from \"servisofts-component\";\r\nimport Services from \"../Services\";\r\nimport habitacion from \"./habitacion\";\r\nimport Lista from \"./habitacion/Pages/Lista\";\r\n// import Lista from \".//Pages/Lista\";\r\n\r\nimport InicioPage from \"./InicioPage\";\r\nconst Pages: SPageListProps = {\r\n  \"/\": Lista,\r\n  \"/ass\": InicioPage,\r\n  ...Services.Pages,\r\n  ...habitacion.Pages\r\n};\r\n\r\nexport const Reducers = {\r\n  ...Services.Reducers,\r\n  ...habitacion.Reducers\r\n};\r\n\r\nexport default Pages;\r\n","import { SAssets } from 'servisofts-component'\r\n\r\nimport Logo, { ReactComponent as LogoW } from './svg/bateonIcon.svg';\r\nimport BateonBox, { ReactComponent as BateonBoxW } from './svg/bateonBox.svg';\r\nimport Mail, { ReactComponent as MailW } from './svg/Mail.svg';\r\nimport Bg1, { ReactComponent as Bg1W } from './svg/Bg1.svg';\r\nconst Assets: SAssets = {\r\n    svg: {\r\n    }\r\n}\r\n\r\nexport default Assets;","import { combineReducers } from 'redux';\r\n\r\n\r\nimport { Reducers} from '../Pages'\r\nconst reducers = combineReducers({\r\n    ...Reducers\r\n   \r\n});\r\n\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n        case 'USUARIO_LOGOUT':\r\n            state = undefined;\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return reducers(state, action);\r\n}","import { SThemeThemes } from \"servisofts-component\";\r\nimport { SSocketProps } from \"servisofts-socket\";\r\nconst SThemeProps: SThemeThemes = {\r\n  default: {\r\n    barStyle: \"dark-content\",\r\n    barColor: \"#ffffff\",\r\n    primary: \"#ffffff\",\r\n    secondary: \"#000000\",\r\n    background: \"#cccccc\",\r\n    card: \"#00000066\"\r\n  },\r\n  dark: {\r\n    barStyle: \"light-content\",\r\n    barColor: \"#000000\",\r\n    primary: \"#000000\",\r\n    secondary: \"#ffffff\",\r\n    background: \"#222222\",\r\n    card: \"#00000066\"\r\n  }\r\n};\r\n\r\nconst SocketProps: SSocketProps = {\r\n  name: \"yoalquilo\",\r\n  host: \"192.168.3.4\",\r\n  ssl: false,\r\n  // host: 'alvaro.ss.lo',\r\n  port: {\r\n    native: 10022,\r\n    web: 20022,\r\n    http: 30022\r\n  },\r\n  cert:\r\n    \"MIID2DCCAsCgAwIBAgIEY5PQVTANBgkqhkiG9w0BAQsFADCBrTELMAkGA1UEBhMCQk8xEjAQBgNVBAgMCUF2IEJhbnplcjETMBEGA1UEBwwKU2FudGEgQ3J1ejEXMBUGA1UECgwOU2Vydmlzb2Z0cyBTUkwxEjAQBgNVBAsMCXlvYWxxdWlsbzEhMB8GA1UEAwwYeW9hbHF1aWxvLnNlcnZpc29mdHMuY29tMSUwIwYJKoZIhvcNAQkBFhZhbHZhcm9zaWxlczFAZ21haWwuY29tMB4XDTIyMTIxMDAwMTgyOVoXDTIyMTIxMTAwMTgyOVowga0xCzAJBgNVBAYTAkJPMRIwEAYDVQQIDAlBdiBCYW56ZXIxEzARBgNVBAcMClNhbnRhIENydXoxFzAVBgNVBAoMDlNlcnZpc29mdHMgU1JMMRIwEAYDVQQLDAl5b2FscXVpbG8xITAfBgNVBAMMGHlvYWxxdWlsby5zZXJ2aXNvZnRzLmNvbTElMCMGCSqGSIb3DQEJARYWYWx2YXJvc2lsZXMxQGdtYWlsLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPNVPsgdxdTTjknPhd/098IFYYZfBfJSDkDQCjoDhzK6gbzD+EfZL0zYajdwBAL8SNg+7pJkcw6/wdiDq6H1H0sneT+aSOeKZdiSTM+BdGbcAserVVEnon5AG6nYTlRJHYSru26k8SQrBn0wqog2AXH9wcwOp16KsVTTyRfndtZ7HY8nBihpIMN4n2hVgCTlQxW/6ZzCKvLJuTHoECo/kZJnJs6lH4Q2jxMeKOpcfvCKud3hhGf1FVLy4Y0BRXWJtGO/W87F4wSbq2lWFn0wOnadDkf7u0oL2X5EVxMwEpEpORvmhCgn9PrclbmEECl/hqniCYQnMxAifsnQwWH+Yz8CAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAiCxZm83vZCB5Fg7tMTbTHmlj5WzvcperIWja04Nb5IN6TAl/3uqOmB2O4AeyOcz+Uu/AymxFBtEuG3IHeqm0cYkEDK4y7AR7zSgI/Q/0FxFDIC77yP/hqCFUkExvXQIIkTifS02rt0F3a5Pj+7iwy69/Bx34PNVVEO09QdvYatDsHsC+qCDNGAv/EQ/UcRcpe4ilm0yJOTz7bI/1HogPuOCmVm99fsJkjCBTrIRRLss0nxgUUjFfJCiEZPP9BE38GEdGqsUsaVYxoC+Ola6SbeHG9ddNbJLLrSZLhYXACDuIrk9EraXO5GL2CShyNrI9JmCikdBY61zzZCcbL7N3aw==\",\r\n  apis: {\r\n    servicio: \"http://servicio.ss.lo/http/\"\r\n    // rp: \"http://192.168.0.21:30016/\"\r\n  }\r\n};\r\nexport default {\r\n  SocketProps,\r\n  SThemeProps\r\n};\r\n","import React from 'react';\r\nimport { SComponentContainer, SIcon, SNavigation, SView } from 'servisofts-component';\r\nimport Pages from './Pages';\r\nimport Assets from './Assets';\r\n\r\n//---------REDUX----------\r\nimport Reducer from './Reducer';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport reduxThunk from 'redux-thunk';\r\n//------------------------\r\nimport SConfig from './SConfig';\r\nimport SSocket, { setProps } from 'servisofts-socket'\r\nsetProps(SConfig.SocketProps);\r\n\r\nconst store = createStore(\r\n    Reducer,\r\n    {},\r\n    applyMiddleware(reduxThunk),\r\n);\r\n\r\nconst App = (props) => {\r\n    return (\r\n        <Provider store={store}>\r\n            <SComponentContainer\r\n                debug\r\n                socket={SSocket}\r\n                assets={Assets}\r\n                theme={{ initialTheme: \"dark\", themes: SConfig.SThemeProps }}>\r\n                <SNavigation props={{\r\n                    prefixes: [\"https://component.servisofts.com\", \"component.servisofts://\"],\r\n                    pages: Pages\r\n                }} />\r\n                <SSocket identificarse={(props) => {\r\n                    var usuario = null\r\n                    return {\r\n                        data: usuario ? usuario : {},\r\n                        deviceKey: \"as-asa-as\",\r\n                    }\r\n                }} />\r\n                {/* <NavBar /> */}\r\n            </SComponentContainer>\r\n        </Provider>\r\n    )\r\n}\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}